{"version":3,"sources":["App.tsx","hooks/useWindowSize.tsx","serviceWorker.ts","index.tsx"],"names":["gsap","registerPlugin","ScrollTrigger","App","size","getSize","width","window","innerWidth","height","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","containerRef","useRef","navList","navLogo","bottomList","clothing","introFig","imported","accra","introBottomText","volume","author","sectionOneImg","sectionTwoHeading","sectionTwoFig","sectionThirdContainer","sectionThirdText","data","ease","curr","prev","rounded","smoothScroll","useCallback","scrollY","Math","round","current","style","transform","requestAnimationFrame","initScrollAnimations","animationObj","duration","y","opacity","to","scrollTrigger","trigger","start","scrub","autoAlpha","filter","toggleClass","document","body","getBoundingClientRect","className","ref","href","src","alt","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.51604d28.chunk.js","sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {useWindowSize} from './hooks/useWindowSize';\nimport {ScrollTrigger} from 'gsap/ScrollTrigger';\nimport {gsap} from 'gsap';\n\ngsap.registerPlugin(ScrollTrigger);\n\nfunction App() {\n    const size = useWindowSize();\n\n    // refs\n    const containerRef = useRef<HTMLDivElement>(null);\n    const navList = useRef<HTMLUListElement>(null);\n    const navLogo = useRef<HTMLDivElement>(null);\n    const bottomList = useRef<HTMLDivElement>(null);\n\n    const clothing = useRef<HTMLDivElement>(null);\n    const introFig = useRef<HTMLDivElement>(null);\n    const imported = useRef<HTMLDivElement>(null);\n    const accra = useRef<HTMLDivElement>(null);\n    const introBottomText = useRef<HTMLDivElement>(null);\n    const volume = useRef<HTMLDivElement>(null);\n    const author = useRef<HTMLDivElement>(null);\n    const sectionOneImg = useRef<HTMLDivElement>(null);\n    const sectionTwoHeading = useRef<HTMLDivElement>(null);\n    const sectionTwoFig = useRef<HTMLDivElement>(null);\n    const sectionThirdContainer = useRef<HTMLDivElement>(null);\n    const sectionThirdText = useRef<HTMLDivElement>(null);\n\n    const data = {\n        ease: 0.1,\n        curr: 0,\n        prev: 0,\n        rounded: 0,\n    };\n\n    const setBodyHeight = () => {\n        document.body.style.height = `${\n            containerRef.current!.getBoundingClientRect().height\n        }px`;\n    };\n\n    const smoothScroll = useCallback(() => {\n        data.curr = window.scrollY;\n        data.prev += (data.curr - data.prev) * data.ease;\n        data.rounded = Math.round(data.prev * 100) / 100;\n        containerRef.current!.style.transform = `translateY(-${data.rounded}px)`;\n\n        requestAnimationFrame(() => smoothScroll());\n    }, [data]);\n\n    const initScrollAnimations = useCallback(() => {\n        const animationObj = {\n            duration: 0.8,\n            y: -80,\n            opacity: 0,\n        };\n\n        gsap.to(clothing.current, {\n            scrollTrigger: {\n                trigger: clothing.current!,\n                start: 'center 30%',\n                scrub: true\n            },\n            ...animationObj\n        })\n\n        gsap.to(imported.current, {\n            scrollTrigger: {\n                trigger: imported.current!,\n                start: 'center 13%',\n                scrub: true\n            },\n            ...animationObj\n        })\n\n        gsap.to(accra.current, {\n            scrollTrigger: {\n                trigger: accra.current!,\n                start: 'center 30%',\n                scrub: true\n            },\n            ...animationObj\n        })\n\n\n        gsap.to(introBottomText.current, {\n            scrollTrigger: {\n                trigger: introBottomText.current!,\n                start: 'center 60%',\n                scrub: true\n            },\n            y: -60,\n            duration: 0.8\n        })\n\n        gsap.to(volume.current, {\n            scrollTrigger: {\n                trigger: volume.current!,\n                start: 'center 60%',\n                scrub: true\n            },\n            autoAlpha: 0,\n            duration: 0.1\n        })\n\n        gsap.to(author.current, {\n            scrollTrigger: {\n                trigger: author.current!,\n                start: 'center 60%',\n                scrub: true\n            },\n            autoAlpha: 0,\n            duration: 0.1\n        })\n\n        gsap.to(sectionOneImg.current, {\n            scrollTrigger: {\n                trigger: sectionOneImg.current!,\n                start: 'center 100%',\n                scrub: true\n            },\n            y: -300,\n            filter: 'contrast(1)',\n            duration: 0.8\n        });\n\n        //    Toggle CLasses\n        gsap.to(sectionTwoHeading.current, {\n            scrollTrigger: {\n                trigger: sectionTwoHeading.current!,\n                start: 'center 100%',\n                scrub: true,\n                toggleClass: 'reveal'\n            }\n        })\n\n        gsap.to(sectionTwoFig.current, {\n            scrollTrigger: {\n                trigger: sectionTwoFig.current!,\n                start: 'center 100%',\n                scrub: true,\n                toggleClass: 'reveal'\n            },\n        })\n        gsap.to(sectionTwoFig.current, {\n            scrollTrigger: {\n                trigger: sectionThirdContainer.current!,\n                start: '30% 100%',\n                scrub: true,\n            },\n            y:600,\n            height:'300px'\n        })\n\n        gsap.to(sectionThirdText.current, {\n            scrollTrigger: {\n                trigger: sectionThirdContainer.current!,\n                start: '0 100%',\n                scrub: true,\n            },\n            y:-100,\n            autoAlpha:1\n        })\n\n    }, [])\n\n\n    useEffect(() => {\n        requestAnimationFrame(() => smoothScroll());\n        initScrollAnimations()\n    }, [smoothScroll, initScrollAnimations]);\n\n    useEffect(() => {\n        setBodyHeight();\n    }, [size.height]);\n\n    return (\n        <div className=\"App\">\n            <div className=\"container\" ref={containerRef}>\n                <div className=\"intro\">\n                    <div className=\"nav\">\n                        <div className=\"nav__logo\" ref={navLogo}>\n                            m.\n                        </div>\n                        <ul className=\"navigation\" ref={navList}>\n                            <li className=\"navigation__item\">\n                                <a href=\"#\" className=\"navigation__link\">\n                                    Instagram\n                                </a>\n                            </li>\n                            <li className=\"navigation__item\">\n                                <a href=\"#\" className=\"navigation__link\">\n                                    Twitter\n                                </a>\n                            </li>\n                            <li className=\"navigation__item\">\n                                <a href=\"#\" className=\"navigation__link\">\n                                    Youtube\n                                </a>\n                            </li>\n                            <li className=\"navigation__item\">\n                                <a href=\"#\" className=\"navigation__link\">\n                                    Pinterest\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"intro-center\">\n                        <span ref={clothing}>clothing</span>\n                        <figure ref={introFig}>\n                            <img\n                                src=\"https://images.unsplash.com/photo-1580870858053-8d0764624f4f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2270&q=80\"\n                                alt=\"\"\n                            />\n                        </figure>\n                        <span className=\"top\" ref={imported}>\n              Imported\n            </span>\n                        <div className=\"text\" ref={accra}>\n                            in Accra <span>0'03'439'2</span>\n                        </div>\n                    </div>\n                    <div className=\"intro-bottom\" ref={bottomList}>\n                        <div className=\"intro-bottom-list\" ref={volume}>\n                            Volume 02.\n                        </div>\n                        <div className=\"intro-bottom-list\" ref={introBottomText}>\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Eveniet\n                            sapiente ad commodi cumque saepe asperiores quaerat aut,\n                            explicabo.\n                        </div>\n                        <div className=\"intro-bottom-list\" ref={author}>\n                            By Lorem Ipsum.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"section section--one\">\n                    <figure className=\"img-bg\">\n                        <img\n                            src=\"https://images.unsplash.com/photo-1534320309096-17ce1f77021d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2158&q=80\"\n                            alt=\"\"\n                        />\n                    </figure>\n                    <div className=\"wrapper-img\">\n                        <figure className=\"img-reveal\" ref={sectionOneImg}>\n                            <img\n                                src=\"https://images.unsplash.com/photo-1596432150438-3ef028cca147?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1867&q=80\"\n                                alt=\"\"\n                            />\n                        </figure>\n                    </div>\n                </div>\n                <div className=\"section section--two\">\n                    <h1 ref={sectionTwoHeading}>\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Odit\n                        dignissimos repellendus tenetur, sequi, nostrum aliquam corrupti aut\n                        accusamus itaque tempore nemo blanditiis a cumque vitae ducimus,\n                        dolorum explicabo corporis eveniet?\n                    </h1>\n                    <figure ref={sectionTwoFig}>\n                        <img\n                            src=\"https://images.unsplash.com/photo-1586753513812-462ed2a82584?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60\"\n                            alt=\"\"\n                        />\n                    </figure>\n                </div>\n                <div className=\"section section--third\" ref={sectionThirdContainer}>\n                    <h1 ref={sectionThirdText}>\n                        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Expedita\n                        officia nobis in illum magnam pariatur autem impedit unde voluptas.\n                        Commodi obcaecati totam doloremque consectetur repudiandae odio\n                        laudantium cumque ipsam non?\n                    </h1>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\n\nexport const useWindowSize = () => {\n  const getSize = () => {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  };\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize(getSize());\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}